apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.atman.jishang"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 6
        versionName "1.1.1"
    }

    signingConfigs {
        releaseConfig {
            keyAlias 'wys7'
            keyPassword 'atmanatman'
            storeFile file('../keystore/wys7.keystore')
            storePassword 'atmanatman'
        }
    }

    productFlavors {

        anzhi {}
        baidu {}
        yingyongbao {}
        phone360 {}
        wandoujia {}
        googleplay {}
        anzhuo {}
        phone91 {}
        xiaomi {}
        huawei {}
        pp {}

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }

    }

    buildTypes {
        release {
            // 不显示Log, 在java代码中的调用方式为：BuildConfig.LOG_DEBUG
            buildConfigField "boolean", "LEO_DEBUG", "false"

            minifyEnabled false
            shrinkResources true
            zipAlignEnabled true

            signingConfig signingConfigs.releaseConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            // 显示Log
            buildConfigField "boolean", "LEO_DEBUG", "true"
            versionNameSuffix "-debug"

            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            signingConfig signingConfigs.releaseConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']  // <-- Set your folder here!
        }
    }
    task nativeLibsToJar(type: Zip, description: "create a jar archive of the native libs") {
        destinationDir file("$projectDir/libs")
        baseName "Native_Libs2"
        extension "jar"
        from fileTree(dir: "src/jniLibs", include: "**/*.so")
        into "lib"
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn(nativeLibsToJar)
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:design:22.2.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.google.code.gson:gson:2.3'
    compile project(':corelib')
    compile files('libs/Native_Libs2.jar')
}
